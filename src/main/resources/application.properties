spring.application.name=oauth2-rest-client

spring.security.oauth2.client.registration.clientV1.client-id=clientV1-test
spring.security.oauth2.client.registration.clientV1.client-secret=clientV1-test
spring.security.oauth2.client.registration.clientV1.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.clientV1.client-name=clientV1-test
spring.security.oauth2.client.registration.clientV1.provider=clientV1
spring.security.oauth2.client.registration.clientV1.client-authentication-method=client_secret_post

spring.security.oauth2.client.registration.clientV2.client-id=clientV2-test
spring.security.oauth2.client.registration.clientV2.client-secret=clientV2-test
spring.security.oauth2.client.registration.clientV2.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.clientV2.client-name=clientV2-test
spring.security.oauth2.client.registration.clientV2.provider=clientV2
spring.security.oauth2.client.registration.clientV2.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.clientV1.token-uri=${downstream.base-path}/oauth2/v2/token
spring.security.oauth2.client.provider.clientV2.token-uri=${downstream.mtls-base-path}/oauth2/v2/token

downstream.base-path=https://localhost:8453
downstream.mtls-base-path=https://localhost:8443

# base 64 encoded p12 or jks keystore
client.cert.keystore=<set it up yourself>
# password of the keystore/ blank if no password is set
client.cert.keystore.password=